unit DeepSeekAPI;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, fphttpclient, fpjson, jsonparser;

type
  TDeepSeekAssistant = class
  private
    FAPIKey: string;
  public
    constructor Create(APIKey: string);
    function AskDeepSeek(Question: string): string;
  end;

implementation

constructor TDeepSeekAssistant.Create(APIKey: string);
begin
  FAPIKey := APIKey;
end;

function TDeepSeekAssistant.AskDeepSeek(Question: string): string;
var
  HTTPClient: TFPHTTPClient;
  Response: TStringStream;
  JSONData: TJSONData;
  RequestBody: string;
begin
  HTTPClient := TFPHTTPClient.Create(nil);
  Response := TStringStream.Create('');
  try
    HTTPClient.RequestHeaders.Add('Authorization: Bearer ' + FAPIKey);
    HTTPClient.RequestHeaders.Add('Content-Type: application/json');

    // Format the request (adjust based on DeepSeek API)
    RequestBody := '{"model": "deepseek-chat", "messages": [{"role": "user", "content": "' + Question + '"}]}';

    HTTPClient.RequestBody := TStringStream.Create(RequestBody);
    HTTPClient.Post('https://api.deepseek.com/v1/chat/completions', Response); // Replace with actual API URL

    // Parse JSON response
    JSONData := GetJSON(Response.DataString);
    Result := JSONData.GetPath('choices[0].message.content').AsString;
  finally
    HTTPClient.Free;
    Response.Free;
  end;
end;

end.
